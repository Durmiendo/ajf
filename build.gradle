plugins{
    id "java"
    id "com.github.nekit508.mindustry-mod-plugin" version "$nmpVersion" apply true
}

apply plugin: "antlr"

project.repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://raw.githubusercontent.com/Zelaux/MindustryRepo/master/repository" }
    maven { url "https://www.jitpack.io" }
}

group = "com.github.idk"
version = "0.0.1"

sourceSets.main.java.srcDirs = ["src", "gen", "antlr-gen"]
sourceSets.main.antlr.srcDirs = ["antlr"]
sourceSets.main.resources.srcDirs = ["res"]

nmp.genericInit(mindustryVersion)

dependencies {
    annotationProcessor 'com.github.bsideup.jabel:jabel-javac-plugin:0.4.2'
    compileOnly 'com.github.bsideup.jabel:jabel-javac-plugin:0.4.2'

    annotationProcessor "com.github.bsideup.jabel:jabel-javac-plugin:0.4.2"
    antlr "org.antlr:antlr4:4.13.2"
}

configure([tasks.compileJava]) {
    sourceCompatibility = 16
    options.release = 8

    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(16)
    }
}

tasks.generateGrammarSource {
    var packagee = "org/durmiendo/mods/parser/jcfg"
    var mainDir = outputDirectory

    maxHeapSize = "64m"
    arguments += [ "-visitor",
                   "-long-messages",
                   "-package", packagee.replaceAll("[/\\\\]", ".")]

    //outputDirectory = new File(outputDirectory, packagee)

    doFirst {
        delete mainDir.listFiles()
    }

    doLast {
        if (sourceSets.main.java.srcDirs[2].exists())
            delete sourceSets.main.java.srcDirs[2].listFiles()
        copy {
            from mainDir
            into sourceSets.main.java.srcDirs[2]
        }
    }
}